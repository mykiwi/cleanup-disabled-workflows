# https://help.github.com/en/articles/metadata-syntax-for-github-actions

author: 'mykiwi'

branding:
  icon: 'alert-octagon'
  color: 'orange'

name: 'Cleanup disabled workflows'
description: 'Automate the cleaning of your disabled workflows'

inputs:
  github-token:
    description: 'Custom GitHub Token, to not be rate limited to 1,000 requests' # see https://docs.github.com/en/rest/overview/resources-in-the-rest-api#requests-from-github-actions
    required: false
    default: ${{ github.token }}
  summarize:
    description: 'Show which workflows would be deleted (without actually deleting them)'
    default: false

runs:
  using: "composite"
  steps:

    - uses: actions/github-script@v6
      with:
        github-token: ${{ inputs.github-token }}
        script: |
          const githubContext = {
            owner: context.repo.owner,
            repo: context.repo.repo,
          }

          const disabledWorkflows = await github.paginate(
            github.rest.actions.listRepoWorkflows,
            githubContext
          ).then(workflows => workflows.filter(workflow => workflow.state == 'disabled_manually'))

          console.log('::group::List of disabled workflows')
          console.log(disabledWorkflows)
          console.log('::endgroup::')

          if (${{ inputs.summarize }} || ${{ inputs.summarize }} == 'true') {
            console.log('Exiting early (summarize is set to true)')
            process.exit(0)
          }

          for (const workflow of disabledWorkflows) {
            const runs = await github.paginate(
              github.rest.actions.listWorkflowRuns,
              {
                ...githubContext,
                workflow_id: workflow.id,
              }
            )

            console.log(`::group::Workflow #${workflow.id} >> Runs`)
            console.log(runs)
            console.log('::endgroup::')
            
            for (const run of runs) {
              const response = await github.rest.actions.deleteWorkflowRun({
                ...githubContext,
                run_id: run.id,
              })

              console.log(`::group::Workflow #${workflow.id} >> Run #${run.id} >> Delete`)
              console.log(response)
              console.log('::endgroup::')
            }
          }
